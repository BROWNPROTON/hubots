#hubot
HUBOT_NAME=
HUBOT_ALIAS=
HUBOT_LOG_LEVEL=

EXPRESS_USER=
EXPRESS_PASSWORD=
EXPRESS_STATIC=
EXPRESS_PORT=
HEROKU_URL=

# hubot switches = [
#  ['-a', '--adapter ADAPTER', 'The Adapter to use'],
#  ['-c', '--create PATH', 'Create a deployable hubot'],
#  ['-d', '--disable-httpd', 'Disable the HTTP server'],
#  ['-h', '--help', 'Display the help information'],
#  ['-l', '--alias ALIAS', "Enable replacing the robot's name with alias"],
#  ['-n', '--name NAME', 'The name of the robot in chat'],
#  ['-r', '--require PATH', 'Alternative scripts path'],
#  ['-t', '--config-check', "Test hubot's config to make sure it won't fail at startup"],
#  ['-v', '--version', 'Displays the version of hubot installed']

#markov
HUBOT_MARKOV_DEFAULT_MODEL=true # controls the inclusion of the default, forward-chaining model that learns from all text messages. Set this to `false` to omit the default model and disable the `markov` and `mmarkov` commands.

HUBOT_MARKOV_REVERSE_MODEL=true # controls the inclusion of the reverse model. Setting this to `false` saves some space in your database, but doesn't let you use `remarkov` or `mmarkov`.

HUBOT_MARKOV_PLY=1 # controls the *order* of the default models that are built; effectively, how many previous states (words) are considered to choose the next state. You can bump this up if you'd like, but the default of 1 is both economical with storage and maximally hilarious.

HUBOT_MARKOV_LEARN_MIN=1 # controls the minimum length of a phrase that will be used to train the default models. Set this higher to avoid training your model with a bunch of immediate terminal transitions like "lol".

HUBOT_MARKOV_GENERATE_MAX=50 # controls the maximum size of a markov chain that will be generated by the `markov`, `remarkov`, and `mmarkov` commands.

HUBOT_MARKOV_STORAGE=memory #controls the backing storage used to persist the default models. Choices include:
#  * `memory`, the default, which stores transitions entirely in-process (lost on restart);
#  * `redis`, which stores data in a Redis cache; or
#  * `postgres`, which stores data in a PostgreSQL database.

HUBOT_MARKOV_STORAGE_URL=redis://${USER}:${PASSWORD}@${HOSTNAME}:${PORT}/${DBNUM} # supplies additional configuration required by the `redis` and `postgres` storage backends. The formats are `redis://${USER}:${PASSWORD}@${HOSTNAME}:${PORT}/${DBNUM}` and `postgres://${USER}:${PASSWORD}@${HOSTNAME}:${PORT}/${DATABASE}` with defaults omitted.

HUBOT_MARKOV_RESPOND_CHANCE=1 # controls the chance that Hubot will respond un-prompted to a message it sees by using the last word in the message as the seed. Set this to a value between 0 and 1.0 to enable the feature. Leaving this variable unset or setting it to 0 will disable the feature.

HUBOT_MARKOV_INCLUDE_URLS=false # will default to ignoring messages that include URLs from the default models.

HUBOT_MARKOV_IGNORELIST='' # is interpreted as a comma-separated list of usernames to ignore for purposes of markov indexing. You can use this to prevent the output of other bots or integrations from clogging up your model.

#telegram
TELEGRAM_TOKEN=
TELEGRAM_WEBHOOK=
#TELEGRAM_INTERVAL=2000

#slack
HUBOT_SLACK_TOKEN=

#gitter
TOKEN=<your Gitter Personal Access Token> 
ROOM="org/room1,org2/room3"

#hangouts
HUBOT_HANGUPS_PYTHON=python3.6